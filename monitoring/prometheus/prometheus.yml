# Prometheus Configuration for Cardiolive E-commerce Platform
# Monitoring configuration for comprehensive application observability

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    environment: 'production'
    project: 'cardiolive'

# Rule files for alerting
rule_files:
  - "alerts/*.yml"

# Alert manager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Cardiolive Backend API
  - job_name: 'cardiolive-backend'
    static_configs:
      - targets: ['backend:5000']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics

  # MongoDB Exporter
  - job_name: 'mongodb-exporter'
    static_configs:
      - targets: ['mongodb-exporter:9216']
    scrape_interval: 30s
    metrics_path: /metrics

  # Redis Exporter
  - job_name: 'redis-exporter'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics

  # Nginx metrics (if nginx-prometheus-exporter is used)
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    metrics_path: /metrics

  # Application health checks
  - job_name: 'cardiolive-health'
    static_configs:
      - targets: ['backend:5000']
    scrape_interval: 60s
    metrics_path: /health
    scrape_timeout: 5s

# Remote write configuration (for long-term storage)
remote_write:
  - url: "http://prometheus-remote-storage:9201/write"
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'up|http_.*|database_.*|business_.*'
        action: keep

# Storage and data retention via command line flags
# --storage.tsdb.retention.time=30d
# --storage.tsdb.retention.size=10GB
# --storage.tsdb.path=/prometheus/data
# --storage.tsdb.wal-compression
