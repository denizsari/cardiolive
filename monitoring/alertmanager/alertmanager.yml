# AlertManager Configuration for Cardiolive E-commerce Platform
# Advanced alerting with multiple notification channels

global:
  # SMTP configuration for email alerts
  smtp_smarthost: '${SMTP_SMARTHOST:-localhost:587}'
  smtp_from: '${SMTP_FROM:-alerts@cardiolive.com}'
  smtp_auth_username: '${SMTP_USERNAME}'
  smtp_auth_password: '${SMTP_PASSWORD}'
  smtp_require_tls: true

# Alert routing configuration
route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 4h
  receiver: 'default-alerts'
  
  routes:
    # Critical production alerts
    - match:
        severity: critical
      receiver: 'critical-alerts'
      group_wait: 10s
      repeat_interval: 1h
      
    # Business impact alerts
    - match:
        business_impact: 'true'
      receiver: 'business-alerts'
      group_wait: 1m
      repeat_interval: 2h
      
    # Security alerts
    - match_re:
        alertname: '.*(Security|Attack|Intrusion).*'
      receiver: 'security-alerts'
      group_wait: 10s
      repeat_interval: 30m
      
    # Database alerts
    - match:
        service: mongodb
      receiver: 'database-alerts'
      group_wait: 30s
      repeat_interval: 1h
      
    # Infrastructure alerts
    - match_re:
        alertname: '.*(CPU|Memory|Disk|Network).*'
      receiver: 'infrastructure-alerts'
      group_wait: 2m
      repeat_interval: 3h

# Inhibition rules to reduce noise
inhibit_rules:
  # Inhibit warning alerts if critical alert is firing
  - source_match:
      severity: critical
    target_match:
      severity: warning
    equal: ['alertname', 'cluster', 'service']
    
  # Inhibit specific alerts when service is down
  - source_match:
      alertname: ServiceDown
    target_match_re:
      alertname: '(HighErrorRate|HighResponseTime|DatabaseConnectionFailures)'
    equal: ['service']

# Notification receivers
receivers:
  # Default alerts receiver
  - name: 'default-alerts'
    email_configs:
      - to: '${DEFAULT_EMAIL:-admin@cardiolive.com}'
        subject: '[Cardiolive] {{ .GroupLabels.alertname }} Alert'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Labels: {{ range .Labels.SortedPairs }}
            {{ .Name }}: {{ .Value }}
          {{ end }}
          {{ end }}
        headers:
          X-Priority: 'Normal'

  # Critical alerts - multiple channels
  - name: 'critical-alerts'
    email_configs:
      - to: '${CRITICAL_EMAIL:-admin@cardiolive.com,devops@cardiolive.com}'
        subject: 'üö® [CRITICAL] Cardiolive Alert: {{ .GroupLabels.alertname }}'
        body: |
          üö® CRITICAL ALERT üö®
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Severity: {{ .Labels.severity }}
          Service: {{ .Labels.service }}
          Instance: {{ .Labels.instance }}
          
          Started: {{ .StartsAt.Format "2006-01-02 15:04:05" }}
          
          Labels: {{ range .Labels.SortedPairs }}
            {{ .Name }}: {{ .Value }}
          {{ end }}
          {{ end }}
            Please investigate immediately!
        headers:
          X-Priority: 'High'
          
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_CRITICAL}'
        channel: '#critical-alerts'
        title: 'üö® Critical Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          *Service:* {{ .Labels.service }}
          *Severity:* {{ .Labels.severity }}
          {{ end }}
        color: 'danger'
        
    webhook_configs:
      - url: '${WEBHOOK_CRITICAL_URL}'
        send_resolved: true

  # Business impact alerts
  - name: 'business-alerts'
    email_configs:
      - to: '${BUSINESS_EMAIL:-business@cardiolive.com,management@cardiolive.com}'
        subject: 'üìä [BUSINESS IMPACT] Cardiolive: {{ .GroupLabels.alertname }}'
        body: |
          üìä BUSINESS IMPACT ALERT
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          
          Business Impact: This alert may affect revenue or customer experience.
          
          Details:{{ range .Labels.SortedPairs }}
            {{ .Name }}: {{ .Value }}
          {{ end }}
          {{ end }}
          
          Please review and take appropriate action.
        headers:
          X-Priority: 'High'
          
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_BUSINESS}'
        channel: '#business-alerts'
        title: 'üìä Business Impact: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Alert:* {{ .Annotations.summary }}
          *Impact:* This may affect revenue or customer experience
          {{ end }}
        color: 'warning'

  # Security alerts
  - name: 'security-alerts'
    email_configs:
      - to: '${SECURITY_EMAIL:-security@cardiolive.com,admin@cardiolive.com}'
        subject: 'üîí [SECURITY] Cardiolive Alert: {{ .GroupLabels.alertname }}'
        body: |
          üîí SECURITY ALERT
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          
          Security Details:{{ range .Labels.SortedPairs }}
            {{ .Name }}: {{ .Value }}
          {{ end }}
          {{ end }}
          
          Immediate investigation required!
        headers:
          X-Priority: 'Urgent'
          
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_SECURITY}'
        channel: '#security-alerts'
        title: 'üîí Security Alert: {{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *Security Alert:* {{ .Annotations.summary }}
          *Description:* {{ .Annotations.description }}
          {{ end }}
        color: 'danger'

  # Database alerts
  - name: 'database-alerts'
    email_configs:
      - to: '${DATABASE_EMAIL:-dba@cardiolive.com,devops@cardiolive.com}'
        subject: 'üóÑÔ∏è [DATABASE] Cardiolive Alert: {{ .GroupLabels.alertname }}'
        body: |
          üóÑÔ∏è DATABASE ALERT
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Database Service: {{ .Labels.service }}
          {{ end }}
          
          Database attention required.
        headers:
          X-Priority: 'High'
          
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_DATABASE}'
        channel: '#database-alerts'
        title: 'üóÑÔ∏è Database Alert: {{ .GroupLabels.alertname }}'
        color: 'warning'

  # Infrastructure alerts
  - name: 'infrastructure-alerts'
    email_configs:
      - to: '${INFRA_EMAIL:-infra@cardiolive.com,devops@cardiolive.com}'
        subject: 'üèóÔ∏è [INFRASTRUCTURE] Cardiolive: {{ .GroupLabels.alertname }}'
        body: |
          üèóÔ∏è INFRASTRUCTURE ALERT
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Instance: {{ .Labels.instance }}
          {{ end }}
          
          Infrastructure monitoring alert.        headers:
          X-Priority: 'Normal'
    slack_configs:
      - api_url: '${SLACK_WEBHOOK_INFRA}'
        channel: '#infrastructure-alerts'
        title: 'üèóÔ∏è Infrastructure: {{ .GroupLabels.alertname }}'
        color: 'warning'

# Alert templates
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# Web configuration
web:
  external_url: '${ALERTMANAGER_EXTERNAL_URL:-http://localhost:9093}'

# Storage configuration
storage:
  path: '/alertmanager/data'

# Cluster configuration (for HA setup)
cluster:
  listen-address: '0.0.0.0:9094'
  advertise-address: '${ADVERTISE_ADDRESS}'
  peers: []
  
# API configuration
api:
  v2:
    timeout: 30s
