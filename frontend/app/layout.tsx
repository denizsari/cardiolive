import type { Metadata } from "next";
import { Inter, Playfair_Display, Abril_Fatface } from "next/font/google";
import "./globals.css";
import { ReactNode } from "react";
import Header from "@/components/Header";
import { CartProvider } from "./contexts/CartContext";
import ReactQueryProvider from "./providers/ReactQueryProvider";
import { Toaster } from 'react-hot-toast';
import { EnhancedErrorBoundary } from "./components/ErrorBoundary";

const inter = Inter({
  variable: "--font-inter",
  subsets: ["latin"],
  weight: ["400", "500", "600", "700"],
});

const playfair = Playfair_Display({
  variable: "--font-playfair",
  subsets: ["latin"],
  weight: ["400", "500", "600", "700", "800", "900"],
});

const abril = Abril_Fatface({
  variable: "--font-abril",
  subsets: ["latin"],
  weight: "400",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }: { children: ReactNode }) {
  return (
    <html lang="tr" className={`${inter.variable} ${playfair.variable} ${abril.variable}`}>
      <body className={`${inter.variable} font-sans`}>
        <EnhancedErrorBoundary>
          <ReactQueryProvider>
            <CartProvider>
              <Header />
              <main>{children}</main>
              <Toaster 
                position="top-right"
                toastOptions={{
                  duration: 4000,
                  style: {
                    background: '#fff',
                    color: '#333',
                  },
                  success: {
                    style: {
                      background: '#10b981',
                      color: '#fff',
                    },
                  },
                  error: {
                    style: {
                      background: '#ef4444',
                      color: '#fff',
                    },
                  },
                }}
              />
            </CartProvider>
          </ReactQueryProvider>
        </EnhancedErrorBoundary>
      </body>
    </html>
  )
}
